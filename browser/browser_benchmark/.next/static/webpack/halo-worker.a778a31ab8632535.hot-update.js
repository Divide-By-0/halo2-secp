"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("halo-worker",{

/***/ "./lib/halo2Prover/halo2Prover.ts":
/*!****************************************!*\
  !*** ./lib/halo2Prover/halo2Prover.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateProofScalarMult\": function() { return /* binding */ generateProofScalarMult; },\n/* harmony export */   \"generateProofScalarMultFull\": function() { return /* binding */ generateProofScalarMultFull; },\n/* harmony export */   \"generateProofSimpleCircuit\": function() { return /* binding */ generateProofSimpleCircuit; }\n/* harmony export */ });\n/* harmony import */ var comlink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! comlink */ \"./node_modules/comlink/dist/esm/comlink.mjs\");\n\nconst fetch_ipa_params = async (k)=>{\n    const response = await fetch(\"http://localhost:3000/params_k_\".concat(k, \".bin\"));\n    const bytes = await response.arrayBuffer();\n    const params = new Uint8Array(bytes);\n    return params;\n};\nconst generateProofSimpleCircuit = async ()=>{\n    console.log(\"Simple circuit proof\");\n    const params = await fetch_ipa_params(5);\n    const { default: init , initThreadPool , prove_simple_circuit , init_panic_hook  } = await __webpack_require__.e(/*! import() */ \"lib_halo2Prover_wasm_halo2_efficient_ecdsa_js-lib_halo2Prover_wasm_snippets_wasm-bindgen-rayo-1a65c4\").then(__webpack_require__.bind(__webpack_require__, /*! ./wasm/halo2_efficient_ecdsa.js */ \"./lib/halo2Prover/wasm/halo2_efficient_ecdsa.js\"));\n    await init();\n    await init_panic_hook();\n    await initThreadPool(navigator.hardwareConcurrency);\n    console.time(\"Full proving time\");\n    const proof = await prove_simple_circuit(params);\n    console.timeEnd(\"Full proving time\");\n    console.log(\"proof\", proof);\n};\nconst generateProofScalarMult = async ()=>{\n    console.log(\"Scalar mult proof\");\n    const params = await fetch_ipa_params(11);\n    const { default: init , initThreadPool , prove_scalar_mult , init_panic_hook  } = await __webpack_require__.e(/*! import() */ \"lib_halo2Prover_wasm_halo2_efficient_ecdsa_js-lib_halo2Prover_wasm_snippets_wasm-bindgen-rayo-1a65c4\").then(__webpack_require__.bind(__webpack_require__, /*! ./wasm/halo2_efficient_ecdsa.js */ \"./lib/halo2Prover/wasm/halo2_efficient_ecdsa.js\"));\n    await init();\n    await init_panic_hook();\n    await initThreadPool(navigator.hardwareConcurrency);\n    console.time(\"Full proving time\");\n    const proof = await prove_scalar_mult(params);\n    console.timeEnd(\"Full proving time\");\n    console.log(\"proof\", proof);\n};\nconst generateProofScalarMultFull = async ()=>{\n    console.log(\"Scalar mult full proof\");\n    const params = await fetch_ipa_params(11);\n    const { default: init , initThreadPool , prove_scalar_mult_full , init_panic_hook  } = await __webpack_require__.e(/*! import() */ \"lib_halo2Prover_wasm_halo2_efficient_ecdsa_js-lib_halo2Prover_wasm_snippets_wasm-bindgen-rayo-1a65c4\").then(__webpack_require__.bind(__webpack_require__, /*! ./wasm/halo2_efficient_ecdsa.js */ \"./lib/halo2Prover/wasm/halo2_efficient_ecdsa.js\"));\n    console.log(\"number of threads\", navigator.hardwareConcurrency);\n    await init();\n    await init_panic_hook();\n    await initThreadPool(navigator.hardwareConcurrency);\n    console.time(\"Full proving time\");\n    const proof = await prove_scalar_mult_full(params);\n    console.timeEnd(\"Full proving time\");\n    console.log(\"proof\", proof);\n};\nconst exports = {\n    generateProofScalarMult,\n    generateProofScalarMultFull,\n    generateProofSimpleCircuit\n};\n(0,comlink__WEBPACK_IMPORTED_MODULE_0__.expose)(exports);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaGFsbzJQcm92ZXIvaGFsbzJQcm92ZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUVqQyxNQUFNQyxtQkFBbUIsT0FBTUMsSUFBSztJQUNsQyxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sa0NBQW9DLE9BQUZGLEdBQUU7SUFDakUsTUFBTUcsUUFBUSxNQUFNRixTQUFTRyxXQUFXO0lBRXhDLE1BQU1DLFNBQVMsSUFBSUMsV0FBV0g7SUFDOUIsT0FBT0U7QUFDVDtBQUVPLE1BQU1FLDZCQUE2QixVQUFZO0lBQ3BEQyxRQUFRQyxHQUFHLENBQUM7SUFDWixNQUFNSixTQUFTLE1BQU1OLGlCQUFpQjtJQUV0QyxNQUFNLEVBQ0pXLFNBQVNDLEtBQUksRUFDYkMsZUFBYyxFQUNkQyxxQkFBb0IsRUFDcEJDLGdCQUFlLEVBQ2hCLEdBQUcsTUFBTSwyUkFBeUM7SUFFbkQsTUFBTUg7SUFDTixNQUFNRztJQUNOLE1BQU1GLGVBQWVHLFVBQVVDLG1CQUFtQjtJQUNsRFIsUUFBUVMsSUFBSSxDQUFDO0lBQ2IsTUFBTUMsUUFBUSxNQUFNTCxxQkFBcUJSO0lBQ3pDRyxRQUFRVyxPQUFPLENBQUM7SUFDaEJYLFFBQVFDLEdBQUcsQ0FBQyxTQUFTUztBQUN2QixFQUFFO0FBRUssTUFBTUUsMEJBQTBCLFVBQVk7SUFDakRaLFFBQVFDLEdBQUcsQ0FBQztJQUNaLE1BQU1KLFNBQVMsTUFBTU4saUJBQWlCO0lBRXRDLE1BQU0sRUFDSlcsU0FBU0MsS0FBSSxFQUNiQyxlQUFjLEVBQ2RTLGtCQUFpQixFQUNqQlAsZ0JBQWUsRUFDaEIsR0FBRyxNQUFNLDJSQUF5QztJQUVuRCxNQUFNSDtJQUNOLE1BQU1HO0lBQ04sTUFBTUYsZUFBZUcsVUFBVUMsbUJBQW1CO0lBQ2xEUixRQUFRUyxJQUFJLENBQUM7SUFDYixNQUFNQyxRQUFRLE1BQU1HLGtCQUFrQmhCO0lBQ3RDRyxRQUFRVyxPQUFPLENBQUM7SUFDaEJYLFFBQVFDLEdBQUcsQ0FBQyxTQUFTUztBQUN2QixFQUFFO0FBRUssTUFBTUksOEJBQThCLFVBQVk7SUFDckRkLFFBQVFDLEdBQUcsQ0FBQztJQUVaLE1BQU1KLFNBQVMsTUFBTU4saUJBQWlCO0lBRXRDLE1BQU0sRUFDSlcsU0FBU0MsS0FBSSxFQUNiQyxlQUFjLEVBQ2RXLHVCQUFzQixFQUN0QlQsZ0JBQWUsRUFDaEIsR0FBRyxNQUFNLDJSQUF5QztJQUVuRE4sUUFBUUMsR0FBRyxDQUFDLHFCQUFxQk0sVUFBVUMsbUJBQW1CO0lBRTlELE1BQU1MO0lBQ04sTUFBTUc7SUFDTixNQUFNRixlQUFlRyxVQUFVQyxtQkFBbUI7SUFDbERSLFFBQVFTLElBQUksQ0FBQztJQUNiLE1BQU1DLFFBQVEsTUFBTUssdUJBQXVCbEI7SUFDM0NHLFFBQVFXLE9BQU8sQ0FBQztJQUNoQlgsUUFBUUMsR0FBRyxDQUFDLFNBQVNTO0FBQ3ZCLEVBQUU7QUFFRixNQUFNTSxVQUFVO0lBQ2RKO0lBQ0FFO0lBQ0FmO0FBQ0Y7QUFHQVQsK0NBQU1BLENBQUMwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvaGFsbzJQcm92ZXIvaGFsbzJQcm92ZXIudHM/ZmNlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHBvc2UgfSBmcm9tIFwiY29tbGlua1wiO1xuXG5jb25zdCBmZXRjaF9pcGFfcGFyYW1zID0gYXN5bmMgayA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wYXJhbXNfa18ke2t9LmJpbmApO1xuICBjb25zdCBieXRlcyA9IGF3YWl0IHJlc3BvbnNlLmFycmF5QnVmZmVyKCk7XG5cbiAgY29uc3QgcGFyYW1zID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMpO1xuICByZXR1cm4gcGFyYW1zO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUHJvb2ZTaW1wbGVDaXJjdWl0ID0gYXN5bmMgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIlNpbXBsZSBjaXJjdWl0IHByb29mXCIpO1xuICBjb25zdCBwYXJhbXMgPSBhd2FpdCBmZXRjaF9pcGFfcGFyYW1zKDUpO1xuXG4gIGNvbnN0IHtcbiAgICBkZWZhdWx0OiBpbml0LFxuICAgIGluaXRUaHJlYWRQb29sLFxuICAgIHByb3ZlX3NpbXBsZV9jaXJjdWl0LFxuICAgIGluaXRfcGFuaWNfaG9va1xuICB9ID0gYXdhaXQgaW1wb3J0KFwiLi93YXNtL2hhbG8yX2VmZmljaWVudF9lY2RzYS5qc1wiKTtcblxuICBhd2FpdCBpbml0KCk7XG4gIGF3YWl0IGluaXRfcGFuaWNfaG9vaygpO1xuICBhd2FpdCBpbml0VGhyZWFkUG9vbChuYXZpZ2F0b3IuaGFyZHdhcmVDb25jdXJyZW5jeSk7XG4gIGNvbnNvbGUudGltZShcIkZ1bGwgcHJvdmluZyB0aW1lXCIpO1xuICBjb25zdCBwcm9vZiA9IGF3YWl0IHByb3ZlX3NpbXBsZV9jaXJjdWl0KHBhcmFtcyk7XG4gIGNvbnNvbGUudGltZUVuZChcIkZ1bGwgcHJvdmluZyB0aW1lXCIpO1xuICBjb25zb2xlLmxvZyhcInByb29mXCIsIHByb29mKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVByb29mU2NhbGFyTXVsdCA9IGFzeW5jICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJTY2FsYXIgbXVsdCBwcm9vZlwiKTtcbiAgY29uc3QgcGFyYW1zID0gYXdhaXQgZmV0Y2hfaXBhX3BhcmFtcygxMSk7XG5cbiAgY29uc3Qge1xuICAgIGRlZmF1bHQ6IGluaXQsXG4gICAgaW5pdFRocmVhZFBvb2wsXG4gICAgcHJvdmVfc2NhbGFyX211bHQsXG4gICAgaW5pdF9wYW5pY19ob29rXG4gIH0gPSBhd2FpdCBpbXBvcnQoXCIuL3dhc20vaGFsbzJfZWZmaWNpZW50X2VjZHNhLmpzXCIpO1xuXG4gIGF3YWl0IGluaXQoKTtcbiAgYXdhaXQgaW5pdF9wYW5pY19ob29rKCk7XG4gIGF3YWl0IGluaXRUaHJlYWRQb29sKG5hdmlnYXRvci5oYXJkd2FyZUNvbmN1cnJlbmN5KTtcbiAgY29uc29sZS50aW1lKFwiRnVsbCBwcm92aW5nIHRpbWVcIik7XG4gIGNvbnN0IHByb29mID0gYXdhaXQgcHJvdmVfc2NhbGFyX211bHQocGFyYW1zKTtcbiAgY29uc29sZS50aW1lRW5kKFwiRnVsbCBwcm92aW5nIHRpbWVcIik7XG4gIGNvbnNvbGUubG9nKFwicHJvb2ZcIiwgcHJvb2YpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUHJvb2ZTY2FsYXJNdWx0RnVsbCA9IGFzeW5jICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJTY2FsYXIgbXVsdCBmdWxsIHByb29mXCIpO1xuXG4gIGNvbnN0IHBhcmFtcyA9IGF3YWl0IGZldGNoX2lwYV9wYXJhbXMoMTEpO1xuXG4gIGNvbnN0IHtcbiAgICBkZWZhdWx0OiBpbml0LFxuICAgIGluaXRUaHJlYWRQb29sLFxuICAgIHByb3ZlX3NjYWxhcl9tdWx0X2Z1bGwsXG4gICAgaW5pdF9wYW5pY19ob29rXG4gIH0gPSBhd2FpdCBpbXBvcnQoXCIuL3dhc20vaGFsbzJfZWZmaWNpZW50X2VjZHNhLmpzXCIpO1xuXG4gIGNvbnNvbGUubG9nKFwibnVtYmVyIG9mIHRocmVhZHNcIiwgbmF2aWdhdG9yLmhhcmR3YXJlQ29uY3VycmVuY3kpO1xuXG4gIGF3YWl0IGluaXQoKTtcbiAgYXdhaXQgaW5pdF9wYW5pY19ob29rKCk7XG4gIGF3YWl0IGluaXRUaHJlYWRQb29sKG5hdmlnYXRvci5oYXJkd2FyZUNvbmN1cnJlbmN5KTtcbiAgY29uc29sZS50aW1lKFwiRnVsbCBwcm92aW5nIHRpbWVcIik7XG4gIGNvbnN0IHByb29mID0gYXdhaXQgcHJvdmVfc2NhbGFyX211bHRfZnVsbChwYXJhbXMpO1xuICBjb25zb2xlLnRpbWVFbmQoXCJGdWxsIHByb3ZpbmcgdGltZVwiKTtcbiAgY29uc29sZS5sb2coXCJwcm9vZlwiLCBwcm9vZik7XG59O1xuXG5jb25zdCBleHBvcnRzID0ge1xuICBnZW5lcmF0ZVByb29mU2NhbGFyTXVsdCxcbiAgZ2VuZXJhdGVQcm9vZlNjYWxhck11bHRGdWxsLFxuICBnZW5lcmF0ZVByb29mU2ltcGxlQ2lyY3VpdFxufTtcbmV4cG9ydCB0eXBlIEhhbG8yUHJvdmVyID0gdHlwZW9mIGV4cG9ydHM7XG5cbmV4cG9zZShleHBvcnRzKTtcbiJdLCJuYW1lcyI6WyJleHBvc2UiLCJmZXRjaF9pcGFfcGFyYW1zIiwiayIsInJlc3BvbnNlIiwiZmV0Y2giLCJieXRlcyIsImFycmF5QnVmZmVyIiwicGFyYW1zIiwiVWludDhBcnJheSIsImdlbmVyYXRlUHJvb2ZTaW1wbGVDaXJjdWl0IiwiY29uc29sZSIsImxvZyIsImRlZmF1bHQiLCJpbml0IiwiaW5pdFRocmVhZFBvb2wiLCJwcm92ZV9zaW1wbGVfY2lyY3VpdCIsImluaXRfcGFuaWNfaG9vayIsIm5hdmlnYXRvciIsImhhcmR3YXJlQ29uY3VycmVuY3kiLCJ0aW1lIiwicHJvb2YiLCJ0aW1lRW5kIiwiZ2VuZXJhdGVQcm9vZlNjYWxhck11bHQiLCJwcm92ZV9zY2FsYXJfbXVsdCIsImdlbmVyYXRlUHJvb2ZTY2FsYXJNdWx0RnVsbCIsInByb3ZlX3NjYWxhcl9tdWx0X2Z1bGwiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/halo2Prover/halo2Prover.ts\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "988f54d79599dbb7"; }
/******/ }();
/******/ 
/******/ }
);